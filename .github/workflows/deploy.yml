name: deploy

on:
  workflow_dispatch:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout source code. 
        uses: actions/checkout@v3
      
      - name: Check Node v            
        run: node -v

      - name: Sign in Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build the Docker image
        run: docker build --no-cache -t ${{ secrets.DOCKER_DEV_IMAGE }} .

      - name: Push the Docker Image to Dockerhub
        run: docker push ${{ secrets.DOCKER_DEV_IMAGE }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get Github Actions IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: Docker Image pull and run
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST_IP }}
          username: ${{ secrets.PROD_HOST_USERNAME }}
          key: ${{ secrets.PROD_HOST_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo 'pull docker image'
            docker pull ${{ secrets.DOCKER_DEV_IMAGE }}
            echo 'stop docker container if exist'
            docker stop security-hub || true && docker rm security-hub || true
            echo 'run new docker container'
            docker run -d --name security-hub -p 3000:3000 ${{ secrets.DOCKER_DEV_IMAGE }}
            echo 'remove unused docker image'
            docker image prune -af

      - name: Remove Github Actions IP From Security Group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32